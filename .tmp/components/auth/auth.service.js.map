{"version":3,"sources":["../../../client/components/auth/auth.service.js"],"names":[],"mappings":"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","file":"auth.service.js","sourcesContent":["'use strict';\n\n(function() {\n\nfunction AuthService($location, $http, $cookies, $q, appConfig, Util, User) {\n  var safeCb = Util.safeCb;\n  var currentUser = {};\n  var userRoles = appConfig.userRoles || [];\n\n  if ($cookies.get('token') && $location.path() !== '/logout') {\n    currentUser = User.get();\n  }\n\n  var Auth = {\n\n    /**\n     * Authenticate user and save token\n     *\n     * @param  {Object}   user     - login info\n     * @param  {Function} callback - optional, function(error, user)\n     * @return {Promise}\n     */\n    login({email, password}, callback) {\n      return $http.post('/auth/local', {\n        email: email,\n        password: password\n      })\n        .then(res => {\n          $cookies.put('token', res.data.token);\n          currentUser = User.get();\n          return currentUser.$promise;\n        })\n        .then(user => {\n          safeCb(callback)(null, user);\n          return user;\n        })\n        .catch(err => {\n          Auth.logout();\n          safeCb(callback)(err.data);\n          return $q.reject(err.data);\n        });\n    },\n\n    /**\n     * Delete access token and user info\n     */\n    logout() {\n      $cookies.remove('token');\n      currentUser = {};\n    },\n\n    /**\n     * Create a new user\n     *\n     * @param  {Object}   user     - user info\n     * @param  {Function} callback - optional, function(error, user)\n     * @return {Promise}\n     */\n    createUser(user, callback) {\n      return User.save(user,\n        function(data) {\n          $cookies.put('token', data.token);\n          currentUser = User.get();\n          return safeCb(callback)(null, user);\n        },\n        function(err) {\n          Auth.logout();\n          return safeCb(callback)(err);\n        }).$promise;\n    },\n\n    /**\n     * Change password\n     *\n     * @param  {String}   oldPassword\n     * @param  {String}   newPassword\n     * @param  {Function} callback    - optional, function(error, user)\n     * @return {Promise}\n     */\n    changePassword(oldPassword, newPassword, callback) {\n      return User.changePassword({ id: currentUser._id }, {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }, function() {\n        return safeCb(callback)(null);\n      }, function(err) {\n        return safeCb(callback)(err);\n      }).$promise;\n    },\n\n    /**\n     * Gets all available info on a user\n     *   (synchronous|asynchronous)\n     *\n     * @param  {Function|*} callback - optional, funciton(user)\n     * @return {Object|Promise}\n     */\n    getCurrentUser(callback) {\n      if (arguments.length === 0) {\n        return currentUser;\n      }\n\n      var value = (currentUser.hasOwnProperty('$promise')) ?\n        currentUser.$promise : currentUser;\n      return $q.when(value)\n        .then(user => {\n          safeCb(callback)(user);\n          return user;\n        }, () => {\n          safeCb(callback)({});\n          return {};\n        });\n    },\n\n    /**\n     * Check if a user is logged in\n     *   (synchronous|asynchronous)\n     *\n     * @param  {Function|*} callback - optional, function(is)\n     * @return {Bool|Promise}\n     */\n    isLoggedIn(callback) {\n      if (arguments.length === 0) {\n        return currentUser.hasOwnProperty('role');\n      }\n\n      return Auth.getCurrentUser(null)\n        .then(user => {\n          var is = user.hasOwnProperty('role');\n          safeCb(callback)(is);\n          return is;\n        });\n    },\n\n     /**\n      * Check if a user has a specified role or higher\n      *   (synchronous|asynchronous)\n      *\n      * @param  {String}     role     - the role to check against\n      * @param  {Function|*} callback - optional, function(has)\n      * @return {Bool|Promise}\n      */\n    hasRole(role, callback) {\n      var hasRole = function(r, h) {\n        return userRoles.indexOf(r) >= userRoles.indexOf(h);\n      };\n\n      if (arguments.length < 2) {\n        return hasRole(currentUser.role, role);\n      }\n\n      return Auth.getCurrentUser(null)\n        .then(user => {\n          var has = (user.hasOwnProperty('role')) ?\n            hasRole(user.role, role) : false;\n          safeCb(callback)(has);\n          return has;\n        });\n    },\n\n     /**\n      * Check if a user is an admin\n      *   (synchronous|asynchronous)\n      *\n      * @param  {Function|*} callback - optional, function(is)\n      * @return {Bool|Promise}\n      */\n    isAdmin() {\n      return Auth.hasRole\n        .apply(Auth, [].concat.apply(['admin'], arguments));\n    },\n\n    /**\n     * Get auth token\n     *\n     * @return {String} - a token string used for authenticating\n     */\n    getToken() {\n      return $cookies.get('token');\n    }\n  };\n\n  return Auth;\n}\n\nangular.module('spirit99StationApp.auth')\n  .factory('Auth', AuthService);\n\n})();\n"]}